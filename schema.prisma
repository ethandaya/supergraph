datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum ProposalStatus {
  PENDING
  ACTIVE
  CANCELLED
  VETOED
  QUEUED
  EXECUTED
}

model DelegationEvent {
  id                 Int      @id
  nounId             Int
  previousDelegateId Int
  newDelegateId      Int
  blockNumber        Decimal
  blockTimestamp     Decimal
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model TransferEvent {
  id               Int      @id
  nounId           Int
  previousHolderId Int
  newHolderId      Int
  blockNumber      Decimal
  blockTimestamp   Decimal
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Seed {
  id         Int      @id
  background Decimal
  body       Decimal
  accessory  Decimal
  head       Decimal
  glasses    Decimal
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Noun {
  id        Int      @id
  seedId    Int
  ownerId   Int
  votesIds  Int[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Bid {
  id             Int      @id
  nounId         Int
  amount         Decimal
  bidderId       Int
  blockNumber    Decimal
  txIndex        Decimal
  auctionId      Int
  blockTimestamp Decimal
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Auction {
  id        Int      @id
  nounId    Int
  amount    Decimal
  startTime Decimal
  endTime   Decimal
  bidderId  Int
  settled   Boolean
  bidsIds   Int[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                 Int      @id
  delegateId         Int
  tokenBalanceRaw    Decimal
  tokenBalance       Decimal
  totalTokensHeldRaw Decimal
  totalTokensHeld    Decimal
  nounsIds           Int[]
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model Delegate {
  id                            Int      @id
  delegatedVotesRaw             Decimal
  delegatedVotes                Decimal
  tokenHoldersRepresentedAmount Int
  tokenHoldersRepresentedIds    Int[]
  nounsRepresentedIds           Int[]
  votesIds                      Int[]
  proposalsIds                  Int[]
  createdAt                     DateTime @default(now())
  updatedAt                     DateTime @updatedAt
}

model Proposal {
  id                     Int       @id
  proposerId             Int
  targets                Bytes[]
  values                 Decimal[]
  signatures             String[]
  calldatas              Bytes[]
  createdTimestamp       Decimal
  createdBlock           Decimal
  createdTransactionHash Bytes
  startBlock             Decimal
  endBlock               Decimal
  proposalThreshold      Decimal
  quorumVotes            Decimal
  forVotes               Decimal
  againstVotes           Decimal
  abstainVotes           Decimal
  description            String
  executionETA           Decimal
  votesIds               Int[]
  totalSupply            Decimal
  minQuorumVotesBPS      Int
  maxQuorumVotesBPS      Int
  quorumCoefficient      Decimal
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
}

model Vote {
  id              Int      @id
  support         Boolean
  supportDetailed Int
  votesRaw        Decimal
  votes           Decimal
  reason          String
  voterId         Int
  nounsIds        Int[]
  proposalId      Int
  blockNumber     Decimal
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Governance {
  id                  Int      @id
  proposals           Decimal
  currentTokenHolders Decimal
  currentDelegates    Decimal
  totalTokenHolders   Decimal
  totalDelegates      Decimal
  delegatedVotesRaw   Decimal
  delegatedVotes      Decimal
  proposalsQueued     Decimal
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model DynamicQuorumParams {
  id                      Int      @id
  minQuorumVotesBPS       Int
  maxQuorumVotesBPS       Int
  quorumCoefficient       Decimal
  dynamicQuorumStartBlock Decimal
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
}
